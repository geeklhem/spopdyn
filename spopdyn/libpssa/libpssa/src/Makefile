# Makefile.in generated by automake 1.12.2 from Makefile.am.
# libpssa/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/libpssa
pkgincludedir = $(includedir)/libpssa
pkglibdir = $(libdir)/libpssa
pkglibexecdir = $(libexecdir)/libpssa
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = libpssa/src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_gcc_archflag.m4 \
	$(top_srcdir)/m4/ax_gcc_x86_cpuid.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/gsl.m4 $(top_srcdir)/m4/acx_mpi.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
libpssa_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_libpssa_la_OBJECTS = libpssa_la-PSSA.lo libpssa_la-DataModels.lo \
	libpssa_la-PSSACR_Bins.lo libpssa_la-SimulationInfo.lo \
	libpssa_la-GroupingModule.lo libpssa_la-GroupingModule_DM.lo \
	libpssa_la-GroupingModule_PDM.lo \
	libpssa_la-GroupingModule_PSSACR.lo \
	libpssa_la-GroupingModule_SPDM.lo \
	libpssa_la-CompositionRejectionSampler.lo \
	libpssa_la-SamplingModule.lo libpssa_la-SamplingModule_DM.lo \
	libpssa_la-SamplingModule_PDM.lo \
	libpssa_la-SamplingModule_PSSACR.lo \
	libpssa_la-SamplingModule_SPDM.lo libpssa_la-sha1.lo \
	libpssa_la-UpdateModule.lo libpssa_la-UpdateModule_DM.lo \
	libpssa_la-UpdateModule_PDM.lo \
	libpssa_la-UpdateModule_PSSACR.lo \
	libpssa_la-UpdateModule_SPDM.lo libpssa_la-IBgnuplot.lo \
	libpssa_la-vtk.lo libpssa_la-mpi_spread.lo libpssa_la-dSFMT.lo
libpssa_la_OBJECTS = $(am_libpssa_la_OBJECTS)
libpssa_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libpssa_la_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libpssa_la_SOURCES)
DIST_SOURCES = $(libpssa_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/missing --run autoconf
AUTOHEADER = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/missing --run automake-1.12
AWK = mawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O2  -m64 -mmmx -Wno-unused-but-set-variable
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GSL_CFLAGS = -I/usr/include
GSL_CONFIG = /usr/bin/gsl-config
GSL_LIBS = -L/usr/lib -lgsl -lgslcblas -lm
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lrt -lsbml 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICXX = 
MPILIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libpssa
PACKAGE_BUGREPORT = incardon@mpi-cbg.de
PACKAGE_NAME = libpssa
PACKAGE_STRING = libpssa 1.0.0RC
PACKAGE_TARNAME = libpssa
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0RC
PATH_SEPARATOR = :
PRTDIAG = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.0.0RC
abs_builddir = /home/guilhem/shift/spopdyn/spopdyn/libpssa/libpssa/src
abs_srcdir = /home/guilhem/shift/spopdyn/spopdyn/libpssa/libpssa/src
abs_top_builddir = /home/guilhem/shift/spopdyn/spopdyn/libpssa
abs_top_srcdir = /home/guilhem/shift/spopdyn/spopdyn/libpssa
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/guilhem/shift/spopdyn/spopdyn/libpssa/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
LINKLIBS = $(OPT_LIBS) $(GSL_LIBS)
lib_LTLIBRARIES = libpssa.la
libpssa_la_SOURCES = PSSA.cpp \
			datamodel/DataModels.cpp \
			datamodel/PSSACR_Bins.cpp \
			datamodel/SimulationInfo.cpp \
			grouping/GroupingModule.cpp \
			grouping/GroupingModule_DM.cpp \
			grouping/GroupingModule_PDM.cpp \
			grouping/GroupingModule_PSSACR.cpp \
			grouping/GroupingModule_SPDM.cpp \
			sampling/CompositionRejectionSampler.cpp \
			sampling/SamplingModule.cpp \
			sampling/SamplingModule_DM.cpp \
			sampling/SamplingModule_PDM.cpp \
			sampling/SamplingModule_PSSACR.cpp \
			sampling/SamplingModule_SPDM.cpp \
			sampling/sha1.cpp \
			sampling/sha1.h \
			update/UpdateModule.cpp \
			update/UpdateModule_DM.cpp \
			update/UpdateModule_PDM.cpp \
			update/UpdateModule_PSSACR.cpp \
			update/UpdateModule_SPDM.cpp \
			gnuplot/IBgnuplot.cpp \
			vtk/vtk.cpp \
			MPI/mpi_spread.cpp \
			../dependencies/dSFMT-src-2.1/dSFMT-params.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params11213.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params1279.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params132049.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params19937.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params216091.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params2203.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params4253.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params44497.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params521.h \
			../dependencies/dSFMT-src-2.1/dSFMT-params86243.h \
			../dependencies/dSFMT-src-2.1/dSFMT.c \
			../dependencies/dSFMT-src-2.1/dSFMT.h \
			../dependencies/dSFMT-src-2.1/gsl_dSFMT.h

include_HEADERS = ../include/datamodel/CompositionRejectionSamplerData.h \
			../include/datamodel/DataModel.h \
			../include/datamodel/DataModel_DM.h \
			../include/datamodel/DataModel_PDM.h \
			../include/datamodel/DataModel_PSSACR.h \
			../include/datamodel/DataModel_SPDM.h \
			../include/datamodel/PSSACR_Bins.h \
			../include/datamodel/SimulationInfo.h \
			../include/grouping/GroupingModule.h \
			../include/grouping/GroupingModule_DM.h \
			../include/grouping/GroupingModule_PDM.h \
			../include/grouping/GroupingModule_PSSACR.h \
			../include/grouping/GroupingModule_SPDM.h \
			../include/sampling/CompositionRejectionSampler.h \
			../include/sampling/SamplingModule.h \
			../include/sampling/SamplingModule_DM.h \
			../include/sampling/SamplingModule_PDM.h \
			../include/sampling/SamplingModule_PSSACR.h \
			../include/sampling/SamplingModule_SPDM.h \
			../include/gnuplot/IBgnuplot.h \
			../include/update/UpdateModule.h \
			../include/update/UpdateModule_DM.h \
			../include/update/UpdateModule_PDM.h \
			../include/update/UpdateModule_PSSACR.h \
			../include/update/UpdateModule_SPDM.h \
			../include/vtk/vtk.h \
			../include/MPI/mpi_spread.h \
			../include/PSSA.h \
			../include/optimization.h \
			../include/oscompat.h \
			../include/sampling \
			../include/stdheaders.h \
			../include/typedefs.h

libpssa_la_CFLAGS = -DUNIX -rdynamic $(GSL_CFLAGS)
libpssa_la_CXXFLAGS = -DUNIX -rdynamic $(GSL_CFLAGS)
libpssa_la_LIBADD = $(LINKLIBS)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libpssa/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libpssa/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status libpssa/src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libpssa.la: $(libpssa_la_OBJECTS) $(libpssa_la_DEPENDENCIES) $(EXTRA_libpssa_la_DEPENDENCIES) 
	$(libpssa_la_LINK) -rpath $(libdir) $(libpssa_la_OBJECTS) $(libpssa_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libpssa_la-CompositionRejectionSampler.Plo
include ./$(DEPDIR)/libpssa_la-DataModels.Plo
include ./$(DEPDIR)/libpssa_la-GroupingModule.Plo
include ./$(DEPDIR)/libpssa_la-GroupingModule_DM.Plo
include ./$(DEPDIR)/libpssa_la-GroupingModule_PDM.Plo
include ./$(DEPDIR)/libpssa_la-GroupingModule_PSSACR.Plo
include ./$(DEPDIR)/libpssa_la-GroupingModule_SPDM.Plo
include ./$(DEPDIR)/libpssa_la-IBgnuplot.Plo
include ./$(DEPDIR)/libpssa_la-PSSA.Plo
include ./$(DEPDIR)/libpssa_la-PSSACR_Bins.Plo
include ./$(DEPDIR)/libpssa_la-SamplingModule.Plo
include ./$(DEPDIR)/libpssa_la-SamplingModule_DM.Plo
include ./$(DEPDIR)/libpssa_la-SamplingModule_PDM.Plo
include ./$(DEPDIR)/libpssa_la-SamplingModule_PSSACR.Plo
include ./$(DEPDIR)/libpssa_la-SamplingModule_SPDM.Plo
include ./$(DEPDIR)/libpssa_la-SimulationInfo.Plo
include ./$(DEPDIR)/libpssa_la-UpdateModule.Plo
include ./$(DEPDIR)/libpssa_la-UpdateModule_DM.Plo
include ./$(DEPDIR)/libpssa_la-UpdateModule_PDM.Plo
include ./$(DEPDIR)/libpssa_la-UpdateModule_PSSACR.Plo
include ./$(DEPDIR)/libpssa_la-UpdateModule_SPDM.Plo
include ./$(DEPDIR)/libpssa_la-dSFMT.Plo
include ./$(DEPDIR)/libpssa_la-mpi_spread.Plo
include ./$(DEPDIR)/libpssa_la-sha1.Plo
include ./$(DEPDIR)/libpssa_la-vtk.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libpssa_la-dSFMT.lo: ../dependencies/dSFMT-src-2.1/dSFMT.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CFLAGS) $(CFLAGS) -MT libpssa_la-dSFMT.lo -MD -MP -MF $(DEPDIR)/libpssa_la-dSFMT.Tpo -c -o libpssa_la-dSFMT.lo `test -f '../dependencies/dSFMT-src-2.1/dSFMT.c' || echo '$(srcdir)/'`../dependencies/dSFMT-src-2.1/dSFMT.c
	$(am__mv) $(DEPDIR)/libpssa_la-dSFMT.Tpo $(DEPDIR)/libpssa_la-dSFMT.Plo
#	source='../dependencies/dSFMT-src-2.1/dSFMT.c' object='libpssa_la-dSFMT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CFLAGS) $(CFLAGS) -c -o libpssa_la-dSFMT.lo `test -f '../dependencies/dSFMT-src-2.1/dSFMT.c' || echo '$(srcdir)/'`../dependencies/dSFMT-src-2.1/dSFMT.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libpssa_la-PSSA.lo: PSSA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-PSSA.lo -MD -MP -MF $(DEPDIR)/libpssa_la-PSSA.Tpo -c -o libpssa_la-PSSA.lo `test -f 'PSSA.cpp' || echo '$(srcdir)/'`PSSA.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-PSSA.Tpo $(DEPDIR)/libpssa_la-PSSA.Plo
#	source='PSSA.cpp' object='libpssa_la-PSSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-PSSA.lo `test -f 'PSSA.cpp' || echo '$(srcdir)/'`PSSA.cpp

libpssa_la-DataModels.lo: datamodel/DataModels.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-DataModels.lo -MD -MP -MF $(DEPDIR)/libpssa_la-DataModels.Tpo -c -o libpssa_la-DataModels.lo `test -f 'datamodel/DataModels.cpp' || echo '$(srcdir)/'`datamodel/DataModels.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-DataModels.Tpo $(DEPDIR)/libpssa_la-DataModels.Plo
#	source='datamodel/DataModels.cpp' object='libpssa_la-DataModels.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-DataModels.lo `test -f 'datamodel/DataModels.cpp' || echo '$(srcdir)/'`datamodel/DataModels.cpp

libpssa_la-PSSACR_Bins.lo: datamodel/PSSACR_Bins.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-PSSACR_Bins.lo -MD -MP -MF $(DEPDIR)/libpssa_la-PSSACR_Bins.Tpo -c -o libpssa_la-PSSACR_Bins.lo `test -f 'datamodel/PSSACR_Bins.cpp' || echo '$(srcdir)/'`datamodel/PSSACR_Bins.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-PSSACR_Bins.Tpo $(DEPDIR)/libpssa_la-PSSACR_Bins.Plo
#	source='datamodel/PSSACR_Bins.cpp' object='libpssa_la-PSSACR_Bins.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-PSSACR_Bins.lo `test -f 'datamodel/PSSACR_Bins.cpp' || echo '$(srcdir)/'`datamodel/PSSACR_Bins.cpp

libpssa_la-SimulationInfo.lo: datamodel/SimulationInfo.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SimulationInfo.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SimulationInfo.Tpo -c -o libpssa_la-SimulationInfo.lo `test -f 'datamodel/SimulationInfo.cpp' || echo '$(srcdir)/'`datamodel/SimulationInfo.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SimulationInfo.Tpo $(DEPDIR)/libpssa_la-SimulationInfo.Plo
#	source='datamodel/SimulationInfo.cpp' object='libpssa_la-SimulationInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SimulationInfo.lo `test -f 'datamodel/SimulationInfo.cpp' || echo '$(srcdir)/'`datamodel/SimulationInfo.cpp

libpssa_la-GroupingModule.lo: grouping/GroupingModule.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-GroupingModule.lo -MD -MP -MF $(DEPDIR)/libpssa_la-GroupingModule.Tpo -c -o libpssa_la-GroupingModule.lo `test -f 'grouping/GroupingModule.cpp' || echo '$(srcdir)/'`grouping/GroupingModule.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-GroupingModule.Tpo $(DEPDIR)/libpssa_la-GroupingModule.Plo
#	source='grouping/GroupingModule.cpp' object='libpssa_la-GroupingModule.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-GroupingModule.lo `test -f 'grouping/GroupingModule.cpp' || echo '$(srcdir)/'`grouping/GroupingModule.cpp

libpssa_la-GroupingModule_DM.lo: grouping/GroupingModule_DM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-GroupingModule_DM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-GroupingModule_DM.Tpo -c -o libpssa_la-GroupingModule_DM.lo `test -f 'grouping/GroupingModule_DM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_DM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-GroupingModule_DM.Tpo $(DEPDIR)/libpssa_la-GroupingModule_DM.Plo
#	source='grouping/GroupingModule_DM.cpp' object='libpssa_la-GroupingModule_DM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-GroupingModule_DM.lo `test -f 'grouping/GroupingModule_DM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_DM.cpp

libpssa_la-GroupingModule_PDM.lo: grouping/GroupingModule_PDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-GroupingModule_PDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-GroupingModule_PDM.Tpo -c -o libpssa_la-GroupingModule_PDM.lo `test -f 'grouping/GroupingModule_PDM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_PDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-GroupingModule_PDM.Tpo $(DEPDIR)/libpssa_la-GroupingModule_PDM.Plo
#	source='grouping/GroupingModule_PDM.cpp' object='libpssa_la-GroupingModule_PDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-GroupingModule_PDM.lo `test -f 'grouping/GroupingModule_PDM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_PDM.cpp

libpssa_la-GroupingModule_PSSACR.lo: grouping/GroupingModule_PSSACR.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-GroupingModule_PSSACR.lo -MD -MP -MF $(DEPDIR)/libpssa_la-GroupingModule_PSSACR.Tpo -c -o libpssa_la-GroupingModule_PSSACR.lo `test -f 'grouping/GroupingModule_PSSACR.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_PSSACR.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-GroupingModule_PSSACR.Tpo $(DEPDIR)/libpssa_la-GroupingModule_PSSACR.Plo
#	source='grouping/GroupingModule_PSSACR.cpp' object='libpssa_la-GroupingModule_PSSACR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-GroupingModule_PSSACR.lo `test -f 'grouping/GroupingModule_PSSACR.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_PSSACR.cpp

libpssa_la-GroupingModule_SPDM.lo: grouping/GroupingModule_SPDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-GroupingModule_SPDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-GroupingModule_SPDM.Tpo -c -o libpssa_la-GroupingModule_SPDM.lo `test -f 'grouping/GroupingModule_SPDM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_SPDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-GroupingModule_SPDM.Tpo $(DEPDIR)/libpssa_la-GroupingModule_SPDM.Plo
#	source='grouping/GroupingModule_SPDM.cpp' object='libpssa_la-GroupingModule_SPDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-GroupingModule_SPDM.lo `test -f 'grouping/GroupingModule_SPDM.cpp' || echo '$(srcdir)/'`grouping/GroupingModule_SPDM.cpp

libpssa_la-CompositionRejectionSampler.lo: sampling/CompositionRejectionSampler.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-CompositionRejectionSampler.lo -MD -MP -MF $(DEPDIR)/libpssa_la-CompositionRejectionSampler.Tpo -c -o libpssa_la-CompositionRejectionSampler.lo `test -f 'sampling/CompositionRejectionSampler.cpp' || echo '$(srcdir)/'`sampling/CompositionRejectionSampler.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-CompositionRejectionSampler.Tpo $(DEPDIR)/libpssa_la-CompositionRejectionSampler.Plo
#	source='sampling/CompositionRejectionSampler.cpp' object='libpssa_la-CompositionRejectionSampler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-CompositionRejectionSampler.lo `test -f 'sampling/CompositionRejectionSampler.cpp' || echo '$(srcdir)/'`sampling/CompositionRejectionSampler.cpp

libpssa_la-SamplingModule.lo: sampling/SamplingModule.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SamplingModule.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SamplingModule.Tpo -c -o libpssa_la-SamplingModule.lo `test -f 'sampling/SamplingModule.cpp' || echo '$(srcdir)/'`sampling/SamplingModule.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SamplingModule.Tpo $(DEPDIR)/libpssa_la-SamplingModule.Plo
#	source='sampling/SamplingModule.cpp' object='libpssa_la-SamplingModule.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SamplingModule.lo `test -f 'sampling/SamplingModule.cpp' || echo '$(srcdir)/'`sampling/SamplingModule.cpp

libpssa_la-SamplingModule_DM.lo: sampling/SamplingModule_DM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SamplingModule_DM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SamplingModule_DM.Tpo -c -o libpssa_la-SamplingModule_DM.lo `test -f 'sampling/SamplingModule_DM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_DM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SamplingModule_DM.Tpo $(DEPDIR)/libpssa_la-SamplingModule_DM.Plo
#	source='sampling/SamplingModule_DM.cpp' object='libpssa_la-SamplingModule_DM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SamplingModule_DM.lo `test -f 'sampling/SamplingModule_DM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_DM.cpp

libpssa_la-SamplingModule_PDM.lo: sampling/SamplingModule_PDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SamplingModule_PDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SamplingModule_PDM.Tpo -c -o libpssa_la-SamplingModule_PDM.lo `test -f 'sampling/SamplingModule_PDM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_PDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SamplingModule_PDM.Tpo $(DEPDIR)/libpssa_la-SamplingModule_PDM.Plo
#	source='sampling/SamplingModule_PDM.cpp' object='libpssa_la-SamplingModule_PDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SamplingModule_PDM.lo `test -f 'sampling/SamplingModule_PDM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_PDM.cpp

libpssa_la-SamplingModule_PSSACR.lo: sampling/SamplingModule_PSSACR.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SamplingModule_PSSACR.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SamplingModule_PSSACR.Tpo -c -o libpssa_la-SamplingModule_PSSACR.lo `test -f 'sampling/SamplingModule_PSSACR.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_PSSACR.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SamplingModule_PSSACR.Tpo $(DEPDIR)/libpssa_la-SamplingModule_PSSACR.Plo
#	source='sampling/SamplingModule_PSSACR.cpp' object='libpssa_la-SamplingModule_PSSACR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SamplingModule_PSSACR.lo `test -f 'sampling/SamplingModule_PSSACR.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_PSSACR.cpp

libpssa_la-SamplingModule_SPDM.lo: sampling/SamplingModule_SPDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-SamplingModule_SPDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-SamplingModule_SPDM.Tpo -c -o libpssa_la-SamplingModule_SPDM.lo `test -f 'sampling/SamplingModule_SPDM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_SPDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-SamplingModule_SPDM.Tpo $(DEPDIR)/libpssa_la-SamplingModule_SPDM.Plo
#	source='sampling/SamplingModule_SPDM.cpp' object='libpssa_la-SamplingModule_SPDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-SamplingModule_SPDM.lo `test -f 'sampling/SamplingModule_SPDM.cpp' || echo '$(srcdir)/'`sampling/SamplingModule_SPDM.cpp

libpssa_la-sha1.lo: sampling/sha1.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-sha1.lo -MD -MP -MF $(DEPDIR)/libpssa_la-sha1.Tpo -c -o libpssa_la-sha1.lo `test -f 'sampling/sha1.cpp' || echo '$(srcdir)/'`sampling/sha1.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-sha1.Tpo $(DEPDIR)/libpssa_la-sha1.Plo
#	source='sampling/sha1.cpp' object='libpssa_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-sha1.lo `test -f 'sampling/sha1.cpp' || echo '$(srcdir)/'`sampling/sha1.cpp

libpssa_la-UpdateModule.lo: update/UpdateModule.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-UpdateModule.lo -MD -MP -MF $(DEPDIR)/libpssa_la-UpdateModule.Tpo -c -o libpssa_la-UpdateModule.lo `test -f 'update/UpdateModule.cpp' || echo '$(srcdir)/'`update/UpdateModule.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-UpdateModule.Tpo $(DEPDIR)/libpssa_la-UpdateModule.Plo
#	source='update/UpdateModule.cpp' object='libpssa_la-UpdateModule.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-UpdateModule.lo `test -f 'update/UpdateModule.cpp' || echo '$(srcdir)/'`update/UpdateModule.cpp

libpssa_la-UpdateModule_DM.lo: update/UpdateModule_DM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-UpdateModule_DM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-UpdateModule_DM.Tpo -c -o libpssa_la-UpdateModule_DM.lo `test -f 'update/UpdateModule_DM.cpp' || echo '$(srcdir)/'`update/UpdateModule_DM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-UpdateModule_DM.Tpo $(DEPDIR)/libpssa_la-UpdateModule_DM.Plo
#	source='update/UpdateModule_DM.cpp' object='libpssa_la-UpdateModule_DM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-UpdateModule_DM.lo `test -f 'update/UpdateModule_DM.cpp' || echo '$(srcdir)/'`update/UpdateModule_DM.cpp

libpssa_la-UpdateModule_PDM.lo: update/UpdateModule_PDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-UpdateModule_PDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-UpdateModule_PDM.Tpo -c -o libpssa_la-UpdateModule_PDM.lo `test -f 'update/UpdateModule_PDM.cpp' || echo '$(srcdir)/'`update/UpdateModule_PDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-UpdateModule_PDM.Tpo $(DEPDIR)/libpssa_la-UpdateModule_PDM.Plo
#	source='update/UpdateModule_PDM.cpp' object='libpssa_la-UpdateModule_PDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-UpdateModule_PDM.lo `test -f 'update/UpdateModule_PDM.cpp' || echo '$(srcdir)/'`update/UpdateModule_PDM.cpp

libpssa_la-UpdateModule_PSSACR.lo: update/UpdateModule_PSSACR.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-UpdateModule_PSSACR.lo -MD -MP -MF $(DEPDIR)/libpssa_la-UpdateModule_PSSACR.Tpo -c -o libpssa_la-UpdateModule_PSSACR.lo `test -f 'update/UpdateModule_PSSACR.cpp' || echo '$(srcdir)/'`update/UpdateModule_PSSACR.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-UpdateModule_PSSACR.Tpo $(DEPDIR)/libpssa_la-UpdateModule_PSSACR.Plo
#	source='update/UpdateModule_PSSACR.cpp' object='libpssa_la-UpdateModule_PSSACR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-UpdateModule_PSSACR.lo `test -f 'update/UpdateModule_PSSACR.cpp' || echo '$(srcdir)/'`update/UpdateModule_PSSACR.cpp

libpssa_la-UpdateModule_SPDM.lo: update/UpdateModule_SPDM.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-UpdateModule_SPDM.lo -MD -MP -MF $(DEPDIR)/libpssa_la-UpdateModule_SPDM.Tpo -c -o libpssa_la-UpdateModule_SPDM.lo `test -f 'update/UpdateModule_SPDM.cpp' || echo '$(srcdir)/'`update/UpdateModule_SPDM.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-UpdateModule_SPDM.Tpo $(DEPDIR)/libpssa_la-UpdateModule_SPDM.Plo
#	source='update/UpdateModule_SPDM.cpp' object='libpssa_la-UpdateModule_SPDM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-UpdateModule_SPDM.lo `test -f 'update/UpdateModule_SPDM.cpp' || echo '$(srcdir)/'`update/UpdateModule_SPDM.cpp

libpssa_la-IBgnuplot.lo: gnuplot/IBgnuplot.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-IBgnuplot.lo -MD -MP -MF $(DEPDIR)/libpssa_la-IBgnuplot.Tpo -c -o libpssa_la-IBgnuplot.lo `test -f 'gnuplot/IBgnuplot.cpp' || echo '$(srcdir)/'`gnuplot/IBgnuplot.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-IBgnuplot.Tpo $(DEPDIR)/libpssa_la-IBgnuplot.Plo
#	source='gnuplot/IBgnuplot.cpp' object='libpssa_la-IBgnuplot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-IBgnuplot.lo `test -f 'gnuplot/IBgnuplot.cpp' || echo '$(srcdir)/'`gnuplot/IBgnuplot.cpp

libpssa_la-vtk.lo: vtk/vtk.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-vtk.lo -MD -MP -MF $(DEPDIR)/libpssa_la-vtk.Tpo -c -o libpssa_la-vtk.lo `test -f 'vtk/vtk.cpp' || echo '$(srcdir)/'`vtk/vtk.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-vtk.Tpo $(DEPDIR)/libpssa_la-vtk.Plo
#	source='vtk/vtk.cpp' object='libpssa_la-vtk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-vtk.lo `test -f 'vtk/vtk.cpp' || echo '$(srcdir)/'`vtk/vtk.cpp

libpssa_la-mpi_spread.lo: MPI/mpi_spread.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -MT libpssa_la-mpi_spread.lo -MD -MP -MF $(DEPDIR)/libpssa_la-mpi_spread.Tpo -c -o libpssa_la-mpi_spread.lo `test -f 'MPI/mpi_spread.cpp' || echo '$(srcdir)/'`MPI/mpi_spread.cpp
	$(am__mv) $(DEPDIR)/libpssa_la-mpi_spread.Tpo $(DEPDIR)/libpssa_la-mpi_spread.Plo
#	source='MPI/mpi_spread.cpp' object='libpssa_la-mpi_spread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpssa_la_CXXFLAGS) $(CXXFLAGS) -c -o libpssa_la-mpi_spread.lo `test -f 'MPI/mpi_spread.cpp' || echo '$(srcdir)/'`MPI/mpi_spread.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
